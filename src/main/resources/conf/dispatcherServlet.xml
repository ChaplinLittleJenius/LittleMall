<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--springmvc配置文件， 声明controller和其它web相关的对象-->
    <context:component-scan base-package="controller"/>

    <!-- 配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置逻辑视图的前缀 -->
        <property name="prefix" value="/"/>
        <!-- 配置逻辑视图的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
      SpringMVC使用<mvc:annotation-driven>自动加载RequestMappingHandlerMapping和RequestMappingHandlerAdapter
      1. 响应ajax请求，返回json
      2. 解决静态资源访问问题。
    -->
    <mvc:annotation-driven/>
    <!--声明让Tomcat服务器处理静态资源(.js .html .css等)-->
    <mvc:default-servlet-handler/>

    <!--声明拦截器(拦截器可以有多个)-->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash;指定要拦截的请求地址path&ndash;&gt;
            <mvc:mapping path="/LittleMall/*.jsp"/>
            &lt;!&ndash;指定不拦截的请求地址path&ndash;&gt;
            <mvc:exclude-mapping path="/LittleMall/login.jsp" />
            &lt;!&ndash;拦截器对象&ndash;&gt;
            <bean class="handler.Interceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->
</beans>